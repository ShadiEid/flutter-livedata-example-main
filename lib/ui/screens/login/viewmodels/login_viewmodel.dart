/// Generated By XFlutter Cli.
///

///
/// state management for UI
///
/// store and manage your liveData in [LoginParams].
import 'package:livedata_app/controllers/authentication_controller.dart';
import 'package:livedata_app/extensions/formz_extensions.dart';
import 'package:livedata_app/extensions/nullable_extensions.dart';
import 'package:livedata_app/models/data_models.dart';
import 'package:livedata_app/repositories/auth_repository.dart';
import 'package:livedata_app/events/bus_events.dart';

import "login_params.dart";
import 'package:lazy_evaluation/lazy_evaluation.dart';
import 'package:livedata_app/viewmodels/base_viewmodel.dart';

import 'package:flutterx_live_data/flutterx_live_data.dart';
import 'package:livedata_app/models/forms/formz_email.dart';
import 'package:livedata_app/models/forms/formz_password.dart';

class LoginViewModel extends BaseViewModel {
  final _params = Lazy(() => LoginParams());
  LoginParams get params => _params.value;

  final _authRepository = Lazy(() => AuthRepository());
  AuthRepository get authRepository => _authRepository.value;

  /// update [LoginParams] some [FormzEmail] variable.
  void formzEmailChanged(MutableLiveData<FormzEmail> attr, String value) {
    final newValue = FormzEmail.dirty(value);
    attr.postValue(newValue);
  }

  /// update [LoginParams] some [FormzPassword] variable.
  void formzPasswordChanged(MutableLiveData<FormzPassword> attr, String value) {
    final newValue = FormzPassword.dirty(value);
    attr.postValue(newValue);
  }

  void login() {
    eventBus.fire(const SoftKeyboardEvent());
    final loginRequest = LoginRequest(
      email: params.email.inputValue(),
      password: params.password.inputValue(),
    );
    callHttpRequest<LoginResponse>(
      () => authRepository.login(loginRequest),
      loading: baseParams.loading,
      callback: (result) => result?.user?.let((it) async {
        await AuthenticationController.login(result);
        params.result.postValue(it);
      }),
    );
  }
}
