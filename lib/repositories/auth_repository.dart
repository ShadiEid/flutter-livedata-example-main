/// Generated By XFlutter Cli.
///

import 'dart:async';
import 'package:livedata_app/network/auth_rest_client/auth_rest_client.dart';
import 'base_repository.dart';
import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:lazy_evaluation/lazy_evaluation.dart';
import 'package:livedata_app/models/data_models.dart';
import 'package:livedata_app/models/responses/base_response/base_response.dart';

class AuthRepository extends BaseRepository {
  final _authRestClient = Lazy<AuthRestClient>(() => AuthRestClient(GetIt.I.get<Dio>()));
  AuthRestClient get authRestClient => _authRestClient.value;

  Future<BaseResponse<LoginResponse>> login(LoginRequest loginRequest) async {
    return getResponse(() => authRestClient.login(loginRequest: loginRequest).onError((error, _) => catchError<LoginResponse>(error)));
  }

  Future<BaseResponse<LoginResponse>> register(RegisterRequest registerRequest) async {
    return getResponse(() => authRestClient.register(registerRequest: registerRequest).onError((error, _) => catchError<LoginResponse>(error)));
  }
}
